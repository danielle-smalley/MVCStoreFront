@model IEnumerable<MVCStoreFront.DATA.EF.Product>

@{
    ViewBag.Title = "Browse our Cat-alog";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="breadcrumb_part">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb_iner">
                    <h2>@ViewBag.Title</h2>
                </div>
            </div>
        </div>
    </div>
</section>
@*<h2>@ViewBag.Title</h2>*@


<div class="row">
    @*<p>
            <a href="@Url.Action("Serverside", "Filters")" class="pull-right btn btn-success">Table View</a>
        </p>*@
    @if (Request.IsAuthenticated && User.IsInRole("Admin"))
    {

        <p class="text-center p-5">
            @*@Html.ActionLink("Create New", "Create")
                @Url.Action("Create New", "Create")*@
            <a href="@Url.Action("Create", "Products")" class="btn_3 pull-right">Add New Product</a>
        </p>
    }
    <h2 class="text-center p-5">Shop all products below, or choose a category:</h2>

    <div class="col-md-12 text-center">
        @foreach (var category in ViewBag.ProductCategories)
        {
            string name = category;
            if (!(category.IndexOf(' ') < 0))
            {
                name = category.Substring(0, category.IndexOf(' '));
            }
            <button class="button btn-dark" id="category-@category" onclick="filter('@name')">@category</button>
        }
    </div>

    <br />
    <hr/>
    <br />
    @*<table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ItemsPerUnit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitsOnOrder)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitsSold)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitsInStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductCategory.CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StockStatus.Status)
            </th>
            <th></th>
        </tr>*@
    <br />
    <br />
    <br />
    <section id="productsGrid">
        @foreach (var item in Model)

        {

            <div class="col-md-8 col-sm-1 col-xs-1 col-offset-2 @(item.ProductCategory.CategoryName) product">
                <div class="course">
                    <a href="@Url.Action("Details", "Products", new { id = item.ProductID })" class="course-img">
                        <img src="~/Content/img/product/@item.Image" alt="@item.ProductName" />
                        <i class="course-link-icon fa fa-link"></i>
                    </a>
                    <a class="course-title" href="@Url.Action("Details", "Products", new { id = item.ProductID})">
                        @item.ProductName

                    </a>
                    <span class="course-price course-free course-details">
                        @Html.DisplayFor(modelItem => item.Price)
                    </span>

                    @*<div class="course-details">
        @if (item.ProductCategory != null)
        {
            @*<span class="course-category">
                    @Html.DisplayFor(modelItem => item.ProductCategory.CategoryName)
                </span>*@

                </div>
            </div>

        }
    </section>
</div>

        @*<tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemsPerUnit)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UnitsOnOrder)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UnitsSold)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UnitsInStock)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Image)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductCategory.CategoryName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StockStatus.Status)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id=item.ProductID }) |
                        @Html.ActionLink("Details", "Details", new { id=item.ProductID }) |
                        @Html.ActionLink("Delete", "Delete", new { id=item.ProductID })
                    </td>
                </tr>
            }

            </table>*@

        @section scripts{
            <script>
                //Go find the node with the #productsGrid, select all the div.product inside of them. For each div, determine if it has the class with the category name that is passed to the function. If it does, show the item (else). If it doesn't (if), hide the item.
                function filter(category) {
                    $('#productsGrid div.product').each(function () {
                        if (!$(this).hasClass(category)) { //the code is saying on each product (each product has a div class=product) find the category
                            $(this).hide(); //there's code in the CSS that will hide the books that aren't the selected genre
                        }
                        else {
                            $(this).show();
                        }
                    });
                }
            </script>
        }